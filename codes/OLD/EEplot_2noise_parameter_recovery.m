function EEplot_2noise_parameter_recovery(plt, p1, p2)
    plt.figure(4,2,'istitle');
    plt.setup_pltparams('islegmark', false, 'dotsize', 15, 'fontsize_leg', 15, 'fontsize_face', 20, ...
        'linewidth', 2, 'islegbox', 0);
    fns = {'Infobonus_sub', 'bias_sub', 'NoiseRan_sub', 'NoiseDet_sub'};
    plt.setfig('color', {{'black'},{'black'},{'black'},{'black'},{'black'},{'black'},{'black'},{'black'}},...
        'ylabel', {'Fit A','Fit A','Fit b','Fit b', ...
        'Fit \sigma^{ran}', 'Fit \sigma^{ran}', 'Fit \sigma^{det}', 'Fit \sigma^{det}'}, ...
        'xlabel', {'Simulated A','Simulated A','Simulated b','Simulated b', ...
        'Simulated \sigma^{ran}', 'Simulated \sigma^{ran}', 'Simulated \sigma^{det}', 'Simulated \sigma^{det}'}, ...
        'title', {'H = 1', 'H = 6', '','','','','',''},...
        'legloc', 'NorthWest');
    for i = 1:4
        fn = fns{i};
        d1 = p1.(fn);
        d2 = p2.(fn);
        for hi = 1:2
            plt.new;
            str{i*2-2+hi} = plt.scatter(d1(hi,:)', d2(hi,:)', 'diag');
        end
    end
    plt.setfig('legend', strcat({'A', 'A','b','b',...
        '\sigma_{ran}','\sigma_{ran}','\sigma_{det}','\sigma_{det}'}, ...
        {', ',', ',', ',', ',', ',', ',', ',', '}, str));
    plt.update;
    plt.save('parameter_recovery');
end
