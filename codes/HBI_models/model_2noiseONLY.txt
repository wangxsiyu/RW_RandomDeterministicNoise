model{
	    for (h in 1:nHorizon) {
					NoiseRan_k_p[h] ~ dexp(0.01);
					NoiseRan_lambda_p[h] ~ dexp(10);
					NoiseRan[h] <- NoiseRan_k_p[h]/NoiseRan_lambda_p[h];
		      NoiseDet_k_p[h] ~ dexp(0.01);
		      NoiseDet_lambda_p[h] ~ dexp(10);
		      NoiseDet[h] <- NoiseDet_k_p[h]/NoiseDet_lambda_p[h];
					for (s in 1:nSubject) {
							NoiseRan_sub[h,s] ~ dgamma(NoiseRan_k_p[h], NoiseRan_lambda_p[h]);
		          NoiseDet_sub[h,s] ~ dgamma(NoiseDet_k_p[h], NoiseDet_lambda_p[h]);
							NoiseRan_sub_tau[h,s] <- 1/NoiseRan_sub[h,s];
		          NoiseDet_sub_tau[h,s] <- 1/NoiseDet_sub[h,s];
					}

			}
			dNoiseRan = NoiseRan[2] - NoiseRan[1];
			dNoiseDet = NoiseDet[2] - NoiseDet[1];
	    for (h in 1:nHorizon) {
            for (s in 1:nSubject){
                for (i in 1:nrepeatID[s]){
                    NoiseDet_pair[h, s, i] ~ dlogis(0, NoiseDet_sub_tau[h, s]);
                }
            }
        }
		for (s in 1:nSubject){
				dNoiseRan_sub[s] = NoiseRan_sub[2, s] - NoiseRan_sub[1, s];
        dNoiseDet_sub[s] = NoiseDet_sub[2, s] - NoiseDet_sub[1, s];
        for (t in 1:nTrial[s]) {
            NoiseRan_trial[s, t] ~ dlogis(0,NoiseRan_sub_tau[horizon[s,t],s]);
						choice[s,t] ~ sum(NoiseDet_pair[horizon[s,t],s,repeatID[s,t]], NoiseRan_trial[s, t]);
			}
		}
}
